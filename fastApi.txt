!pip install fastapi uvicorn joblib

!pip install pyngrok

!ngrok kill

!ngrok config add-authtoken 2oai5oSu9VZwg9skxUGEOWddpg8_2XqVtVH6kBVPyy1sVfMU7

!lsof -i :8000

#**********************

import threading
import nest_asyncio
import uvicorn
from fastapi import FastAPI
from pydantic import BaseModel
import joblib
import numpy as np
from typing import List
from pyngrok import ngrok

import tarfile
import os


# Inicializar la aplicación FastAPI
app = FastAPI()

# Cargar el modelo con manejo de excepciones
try:
    model = joblib.load('/content/model-ok.joblib')
    print("Modelo cargado correctamente.")
except FileNotFoundError:
    print("Archivo del modelo no encontrado.")
except Exception as e:
    print(f"Error al cargar el modelo: {e}")



# Crear la aplicación FastAPI
app = FastAPI()

# Definir un modelo de datos para recibir las entradas
#class DataPayload(BaseModel):
class InputData(BaseModel):
    data: List[float]

# Endpoint para hacer predicciones
@app.post("/predict/")
async def predict(payload: InputData):
    try:
        # Extraer los datos del payload
        data = np.array(payload.data).reshape(1, -1)  # Asegúrate de que los datos estén en el formato adecuado

        # Realizar la predicción
        prediction = model.predict(data)

        # Mapear el valor de la predicción a una etiqueta
        label_map = {0: "low_value", 1: "medium_value", 2: "high_value"}
        predicted_label = label_map.get(prediction[0], "unknown")

        return {"predicted_label": predicted_label}

    except Exception as e:
        print(f"Error en la predicción: {e}")
        return {"error": str(e)}
#****************************************************



# Permite que FastAPI ejecute dentro de Colab
nest_asyncio.apply()

# Función para ejecutar el servidor en un hilo
def run_server():
    uvicorn.run(app, host="0.0.0.0", port=8000)

# Ejecutar el servidor en un hilo separado
thread = threading.Thread(target=run_server)
thread.start()

# Crear un túnel a través de ngrok
public_url = ngrok.connect(8000)
print(f"FastAPI is accessible at: {public_url}")

#******************************

!pip install fastapi uvicorn joblib pyngrok nest_asyncio


print(f"FastAPI is accessible at: {public_url}")


!curl -X POST https://9cb4-34-122-122-62.ngrok-free.app/predict/ -H "Content-Type: application/json" -d '{"data": [0.812959, 0, -0.560700, 1.701895, -1.478080, -0.121517, 0.125643, 0, 0.489832, 0.340994]}'



